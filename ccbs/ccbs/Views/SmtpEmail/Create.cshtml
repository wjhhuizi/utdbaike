@model ccbs.Models.EmailAccount
@{
    ViewBag.Title = "Create";
}
<div id="content-no-sidebar">
    <h4>
        Add a new SMTP Email Account</h4>
    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
    @using (Html.BeginForm())
    {
        @Html.ValidationSummary(true)
        <fieldset>
            <legend>Email Account</legend>
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.Verified)
            @Html.HiddenFor(model => model.VerifyMessage)
            @Html.HiddenFor(model => model.LastVerifyDate)
            <div class="editor-label">
                @Html.LabelFor(model => model.Name, "Nickname")
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Host)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Host)
                @Html.ValidationMessageFor(model => model.Host)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Port)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Port)
                @Html.ValidationMessageFor(model => model.Port)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Username, "Username")
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Username)
                @Html.ValidationMessageFor(model => model.Username)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Password)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Password)
                @Html.ValidationMessageFor(model => model.Password)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.From, "Email Address")
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.From)
                @Html.ValidationMessageFor(model => model.From)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.SmtpDailyLimit, "Daily Limit")
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.SmtpDailyLimit)
                @Html.ValidationMessageFor(model => model.SmtpDailyLimit)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.SmtpPerTimeLimit, "Per time limit")
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.SmtpPerTimeLimit)
                @Html.ValidationMessageFor(model => model.SmtpPerTimeLimit)
            </div>
            <p>
                <input type="submit" value="Add" />
            </p>
        </fieldset>
    }
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>
